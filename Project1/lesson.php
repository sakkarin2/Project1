<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css" integrity="sha512-1PKOgIY59xJ8Co8+NE6FZ+LOAZKjy+KY8iq0G4B3CyeY6wYHN3yt9PW0XpSriVlkMXe40PTKnXrLnZ9+fkDaog==" crossorigin="anonymous" />
    <link rel="stylesheet" href="css/style.css">
    <title>Rotating Navigation</title>
  </head>
  <body>
    <div class="container">
      <div class="circle-container">
        <div class="circle">
          <button id="close">
            <i class="fas fa-times"></i>
          </button>
          <button id="open">
            <i class="fas fa-bars"></i>
          </button>
        </div>
      </div>

      <div class="content">
        <h1>บทที่ 1 แนวคิดเชิงคำนวณ</h1>
        <small>มัธยมศึกษาปีที่ 4</small>
        <h3> การคิดเชิงคำนวณ (computational thinking)</h3>
        <p>คือ กระบวนการแก้ปัญหาในหลากหลายลักษณะ เช่น การจัดลำดับเชิงตรรกศาสตร์  การวิเคราะห์ข้อมูล และการสร้างสรรค์วิธีแก้ปัญหาไปทีละขั้นทีละตอน(หรือที่เรียกว่าอัลกอริทึ่ม) รวมทั้งการย่อยปัญหาที่ช่วยให้รับมือกับปัญหาที่ซับซ้อนหรือมีลักษณะเป็นคำถามปลายเปิดได้ วิธีคิดเชิงคำนวณมีความจำเป็นในการพัฒนาแอพพลิเคชั่นต่างๆ สำหรับคอมพิวเตอร์ แต่ในขณะเดียวกัน วิธีคิดนี้ยังช่วยแก้ปัญหาในวิชาต่างๆ ได้ด้วย เมื่อมีการบูรณาการวิธีิคิดเชิงคำนวณผ่านหลักสูตรในหลากหลายแขนงวิชา นักเรียนจะเห็นความสัมพันธ์ระหว่างแต่ละวิชา รวมทั้งสามารถนำวิธีคิดที่เป็นประโยชน์นี้ ไปใช้แก้ปัญหาในชีวิตจริงได้ในระยะยาว </p>
        

        <h3>สรุปคำจำกัดความของการคิดเชิงคำนวณ</h3>
        <p>1. ไม่ได้จำกัดอยู่เพียงการคิดให้เหมือนคอมพิวเตอร์ <br>
        2. ไม่ได้จำกัดอยู่เพียงการคิดในศาสตร์ของนักวิทยาศาสตร์คอมพิวเตอร์ <br>
        3. แต่เป็นกระบวนการคิดแก้ปัญหาของมนุษย์ เพื่อสั่งให้คอมพิวเตอร์ทำงานและช่วยแก้ปัญหาตามที่เราต้องการได้อย่างมีประสิทธิภาพ<br>
        4. วิธีคิดเชิงคำนวณ ช่วยทำให้ปัญหาที่ซับซ้อนเข้าใจได้ง่ายขึ้น เป็นทักษะที่เป็นประโยชน์อย่างยิ่งต่อทุกๆ สาขาวิชา และทุกเรื่องในชีวิตประจำวัน<br>
        </p>
        <h3> 4 เสาหลัก ของการคิดเชิงคำนวณ</h3>
        <p> 1. Decomposition (การย่อยปัญหา) หมายถึง การย่อยปัญหาหรือระบบที่ซับซ้อนออกเป็นส่วนเล็กๆ เพื่อให้ง่ายต่อการจัดการและแก้ปัญหา เช่น หากต้องการเข้าใจว่าระบบของจักรยานทำงานยังไง ทำได้โดยการแยกจักรยานออกเป็นส่วนๆ แล้วสังเกตและทดสอบการทำงานของแต่ละองค์ประกอบ จะเข้าใจได้ง่ายกว่าวิเคราะห์จากระบบใหญ่ที่ซับซ้อน
        </p>
        <img src="https://sites.google.com/a/spk.ac.th/teacher_coputer/_/rsrc/1612707721360/bth-thi-2-kar-yaek-swn-prakxb-laea-kar-ha-rup-baeb/1.png" width="350" height="350"/> <br>
        <small>ตัวอย่าง การแยกส่วนประกอบ</small>
        <p>2. Pattern Recognition (การจดจำรูปแบบ) เมื่อเราย่อยปัญหาออกเป็นส่วนเล็กๆ ขั้นตอนต่อไปคือการหารูปแบบหรือลักษณะที่เหมือนกันของปัญหาเล็กๆ ที่ถูกย่อยออกมา เช่น หากต้องวาดซีรี่ส์รูปแมว แมวทั้งหลายย่อมมีลักษณะบางอย่างที่เหมือนกัน พวกมันมีตา หาง ขน และชอบกินปลา และร้องเหมียวๆ ลักษณะที่มีร่วมกันนี้ เราเรียกว่ารูปแบบ เมื่อเราสามารถอธิบายแมวตัวหนึ่งได้ เราจะอธิบายลักษณะของแมวตัวอื่นๆ ได้ ตามรูปแบบที่เหมือนกันนั่นเอง</p>
        <img src="https://cdn.pixabay.com/photo/2018/10/17/09/00/alpaca-3753474_960_720.jpg" width="350" height="350"/> <br>
        <small>ถ้าเราจะวาดอัลปาก้าเรานึกถึงอะไรบ้าง</small>
        <p> 3. Abstraction (ความคิดด้านนามธรรม) คือการมุ่งความคิดไปที่ข้อมูลสำคัญ และคัดกรองส่วนที่ไม่เกี่ยวข้องออกไป เพื่อให้จดจ่อเฉพาะสิ่งที่เราต้องการจะทำ เช่น แม้ว่าแมวแต่ละตัวจะมีลักษณะเหมือนกัน แต่มันก็มีลักษณะเฉพาะตัวที่ต่างกัน เช่น มีตาสีเขียว ขนสีดำ ชอบกินปลาทู  ความคิดด้านนามธรรมจะคัดกรองลักษณะที่ไม่ได้ร่วมกันกับแมวตัวอื่นๆ เหล่านี้ ออกไป เพราะรายละเอียดที่ไม่เกี่ยวข้องเหล่านี้ ไม่ได้ช่วยให้เราอธิบายลักษณะพื้นฐานของแมวในการวาดภาพมันออกมาได้ กระบวนการคัดกรองสิ่งที่ไม่เกี่ยวข้องออกไป และมุ่งที่รูปแบบซึ่งช่วยให้เราแก้ปัญหาได้เรียกว่าแบบจำลอง(model) เมื่อเรามีความคิดด้านนามธรรม มันจะช่วยให้เรารู้ว่าไม่จำเป็นที่แมวทุกตัวต้องหางยาวและมีขนสั้น หรือทำให้เรามีโมเดลความคิดที่ชัดเจนขึ้นนั่นเอง</p>
        <img src="https://image.freepik.com/free-vector/set-toilet-signs_97458-214.jpg" width="350" height="350"/> <br>
        <small>แบบจำลองต่างๆ</small>
        <p>4. Algorithm Design (การออกแบบอัลกอริทึ่ม) คือการพัฒนาแนวทางแก้ปัญหาอย่างเป็นขั้นเป็นตอน หรือสร้างหลักเกณฑ์ขึ้นมาเพื่อดำเนินตามทีละขั้นตอนในการแก้ไขปัญหา เช่น เมื่อเราต้องการสั่งคอมพิวเตอร์ให้ทำงานบางอย่าง เราต้องเขียนโปรแกรมคำสั่งเพื่อให้มันทำงานไปตามขั้นตอน การวางแผนเพื่อให้คอมพิวเตอร์ทำงานตอบสนองความต้องการของเรานี้เอง ที่เรียกว่าวิธีคิดแบบอัลกอริทึ่ม คอมพิวเตอร์จะทำงานได้ดีเพียงใด ขึ้นอยู่กับชุดคำสั่งอัลกอริทึ่มที่เราสั่งให้มันทำงานนั่นเอง การออกแบบอัลกอริทึ่มยังเป็นประโยชน์ต่อการคำนวณ การประมวลผลข้อมูลและการวางระบบอัตโนมัติต่างๆ</p>
        <img src="https://www.scimath.org/images/2019/Lesson/10560/10560-7.JPG" width="350" height="350"/> <br>
        <small>การออกแบบอัลกอริทึ่ม</small>
        <h3>           โดยสรุปแล้ว การคิดเชิงคำนวณ เป็น”วิธีคิด” ให้เข้าใจกระบวนการแก้ปัญหา สามารถวิเคราะห์และคิดอย่างมีตรรกะ เป็นระบบและสร้างสรรค์ รวมทั้งสามาถนำวิธีคิดเชิงคำนวณไปปรับใช้แก้ไขปัญหาในสาขาวิชาต่างๆ ได้อย่างกว้างขวาง เป็นประโยชน์ในการต่อยอดองค์ความรู้ต่างๆ ไปตลอดชั่วชีวิต </h3>
      </div>
      <hr>
    </div>

    <nav>
      <ul>
        <li><i class="fas fa-home"></i><a href="#"> บทที่ 1</a></li>
        
      </ul>
    </nav>
    <script src="js/script.js"></script>
  </body>
</html>